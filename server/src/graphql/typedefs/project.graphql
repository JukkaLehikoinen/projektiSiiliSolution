type Project {
    id: ID!
    name: String!
    boards: [Board!]!
    orderNumber: Int!
}

type Query {
    projectById(id: ID!): Project!
    boardsByProjectId(id: ID!): [Board!]!
    allProjects: [Project!]!
}


type Mutation {
     addProject(name: String!, eventId: ID!): Project!
     archiveProjectById(id: ID!, eventId: ID!): ID
}

type Subscription {
    projectRemoved(id: ID!, eventId: ID!): ProjectRemovedPayload!
    projectAdded(projectId: ID!, eventId: ID!): ProjectAddedPayload!
}

type ProjectRemovedPayload {
  removeType: RemoveType!
  removeInfo: RemoveInfo!
}

type ProjectAddedPayload {
  mutationType: MutationType!
  project: Project!
}

enum MutationType {
  CREATED
}

type RemoveInfo {
  id: ID!
}

enum RemoveType {
  DELETED
  ARCHIVED
}


